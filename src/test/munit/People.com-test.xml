<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="GetPersonByPesel-test-suite.xml" />
	<munit:test name="PeopleGetPersonTestShouldReturnPersonDataWithId" doc:id="bab04de0-05b5-4ffa-b1e9-91323dca81b4" description="Test">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Valid Data Returned by People.com" doc:id="b79ca692-706a-4404-8834-20b9afa27192" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8bddb5dc-9db5-4bc2-aca8-da90727827b6" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="HTTP_People_Request_configuration" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/person" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0
output application/json
---
{
	"id": 126,
	"name": "Alicja",
	"surname": "Kowalska",
	"pesel": 85062606702
}
]' mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to PeopleGetPerson" doc:id="f6cc16e9-a18a-4dd7-939a-a833064a04b9" name="PeopleGetPerson" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert data passes validation" doc:id="01de31fe-90c6-404e-87cf-e2248accd8bb" actual="#[payload]" expected='#[{
	"id": 126,
	"name": "Alicja",
	"surname": "Kowalska",
	"pesel": 85062606702
}]' message="Incorrect output" />
		</munit:validation>
	</munit:test>
	<munit:test name="PeopleGetPersonTestShouldThrowSchemaNotHonouredIfDataFromPeopleComIsInvalid" doc:id="fa47dc36-2814-4844-9e9f-5270675b4cc6" description="Test" expectedErrorType="JSON:SCHEMA_NOT_HONOURED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ba199e02-bcfe-4b26-a7a3-b5448afd0899" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8bddb5dc-9db5-4bc2-aca8-da90727827b6" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="HTTP_People_Request_configuration" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/person" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0
output application/json
---
{
	"name": "Alicja",
	"surname": "Kowalska",
	"pesel": 85062606702
}
]' mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to PeopleGetPerson" doc:id="c6816edf-d457-47ed-96b8-7798424026fd" name="PeopleGetPerson"/>
		</munit:execution>
	</munit:test>
	
	<munit:test name="PeopleCreatePersonTestShouldCreateNewPerson" doc:id="cdaed2bd-7de5-431a-a6d7-dc0d4e5ae5fc" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="67200756-ed23-4565-8183-0157ae9bd327" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4abdb029-4e6a-421f-bcdc-91f4f49e319e" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="HTTP_People_Request_configuration" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/person" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0
output application/json
---
{
	"id": 125,
	"name": "Alicja",
	"surname": "Kowalska",
	"pesel": 85062606702
}
]' mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to PeopleCreatePerson" doc:id="d50dfc73-7982-4696-b40b-5e9c194e891e" name="PeopleCreatePerson"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="be83c789-01ac-4dd6-8657-6709c6a6212c" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must equalTo(
	{
	"id": 125,
	"name": "Alicja",
	"surname": "Kowalska",
	"pesel": 85062606702
}
)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
